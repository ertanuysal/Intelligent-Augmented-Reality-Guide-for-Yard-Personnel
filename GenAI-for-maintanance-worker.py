# -*- coding: utf-8 -*-
"""automl-text-classification.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/github/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/automl/automl-text-classification.ipynb
"""

# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the Lice`nse is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""# Vertex AI: Create, train, and deploy an AutoML text classification model

## Overview

This notebook walks you through the major phases of building and using an AutoML text classification model on [Vertex AI](https://cloud.google.com/vertex-ai/docs/).

Learn more about [Classification for text data](https://cloud.google.com/vertex-ai/docs/training-overview#classification_for_text).

### Objective

In this tutorial, you learn how to use `AutoML` to train a text classification model.

This tutorial uses the following Google Cloud ML services:

- `AutoML Training`
- `Vertex AI Model` resource

The steps performed include:

* Create a `Vertex AI Dataset`.
* Train an `AutoML` text classification `Model` resource.
* Obtain the evaluation metrics for the `Model` resource.
* Create an `Endpoint` resource.
* Deploy the `Model` resource to the `Endpoint` resource.
* Make an online prediction
* Make a batch prediction

### Installation

Install the following packages for executing this notebook.
"""

# install packages
! pip3 install --upgrade --quiet google-cloud-aiplatform \
                                    google-cloud-storage \
                                    jsonlines

"""### Colab Only: Uncomment the following cell to restart the kernel"""

# Automatically restart kernel after installs so that your environment can access the new packages
import IPython

app = IPython.Application.instance()
app.kernel.do_shutdown(True)

"""### Before you begin

#### Set your project ID

**If you don't know your project ID**, try the following:
-  Run `gcloud config list`
-  Run `gcloud projects list`
-  See the support page: [Locate the project ID](https://support.google.com/googleapi/answer/7014113)
"""

PROJECT_ID = "hackzurich23-8251"  # @param {type:"string"}

# set the project id
! gcloud config set project $PROJECT_ID

"""#### Region

You can also change the `REGION` variable used by Vertex AI.
Learn more about [Vertex AI regions](https://cloud.google.com/vertex-ai/docs/general/locations).
"""

REGION = "us-central1"  # @param {type: "string"}

"""### Authenticate your Google Cloud account

Depending on your Jupyter environment, you may have to manually authenticate. Follow the relevant instructions below.

**1. Vertex AI Workbench**
- Do nothing as you are already authenticated.

**2. Local JupyterLab Instance,** uncomment and run.
"""

! gcloud auth login

"""**3. Colab,** uncomment and run:"""

from google.colab import auth
auth.authenticate_user()

"""**4. Service Account or other**
- See all the authentication options here: [Google Cloud Platform Jupyter Notebook Authentication Guide](https://github.com/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/notebook_authentication_guide.ipynb)

### Create a Cloud Storage bucket

Create a storage bucket to store intermediate artifacts such as datasets.
"""

BUCKET_NAME = f"your-bucket-name-{PROJECT_ID}-unique"  # @param {type:"string"}
BUCKET_URI = f"gs://{BUCKET_NAME}"

"""**Only if your bucket doesn't already exist**: Run the following cell to create your Cloud Storage bucket."""

! gsutil mb -l {REGION} {BUCKET_URI}

"""### Import libraries and define constants"""

import jsonlines
from google.cloud import aiplatform, storage
from google.cloud.aiplatform import jobs

"""### Initialize Vertex AI

Initialize the Vertex AI SDK for Python for your project.
"""

aiplatform.init(project=PROJECT_ID, location=REGION)

"""Model Finetuning with new related text and testing the chat bot"""

import vertexai
from vertexai.language_models import ChatModel, InputOutputTextPair

vertexai.init(project="hackzurich23-8251", location="us-central1")
chat_model = ChatModel.from_pretrained("chat-bison@001")
parameters = {
    "max_output_tokens": 256,
    "temperature": 0.2,
    "top_p": 0.8,
    "top_k": 40
}
chat = chat_model.start_chat(
    context="""You are a customer service representative of Beesupp. You helped the maintenance guys and operators in Swiss railway shunting yard.
    Beesupp implemented the digitization of rail transport by bridging the gap between physical and digital realms.
    Beesupp Supports the shunting personnel and technicians by enhancing their situational awareness, helping them make informed decisions, and ensure smooth and safe operations.

Here is Beesupp policy: We care about the safety of the shunting personnel and technicians by bridging the gap between physical and digital realms.
""",
    examples=[
        InputOutputTextPair(
            input_text="""Fire is coming out of the train. How should I proceed with the maintenance""",
            output_text="""As a Beesupp, we care about our customers. So, please first chech your safety and then call the officials. If you have to handle with the fire in the train, you should not be alone"""
        ),
        InputOutputTextPair(
            input_text="""How do I get to the eastern signal tower?""",
            output_text="""Hello! To reach the eastern signal tower, follow the highlighted blue path on your AR glasses. It's the safest and quickest route right now."""
        ),
        InputOutputTextPair(
            input_text="""There's an obstacle in front of me. What should I do?""",
            output_text="""Stay put for a moment. I'm re-calculating a safe route for you. Please follow the updated green path on your AR glasses."""
        ),
        InputOutputTextPair(
            input_text="""I need to perform maintenance on track 4. Where's the nearest tool station?""",
            output_text="""The nearest tool station is to your left, approximately 50 meters away. I've marked it with a tool icon on your AR display. Walk safely!"""
        ),
        InputOutputTextPair(
            input_text="""I'm feeling dizzy and need medical help!""",
            output_text="""I'm sorry to hear that. Stay calm. I've alerted medical personnel, and they're on their way. If possible, sit down and wait for assistance."""
        ),
        InputOutputTextPair(
            input_text="""How busy is the yard today?""",
            output_text="""Today, the yard is operating at 75% capacity. Remember to always follow the AR pathways for safe navigation."""
        ),
        InputOutputTextPair(
            input_text="""Can you guide me to the crew lounge?""",
            output_text="""Of course! Highlighting the path to the crew lounge now. It's approximately a 3-minute walk from your current location."""
        ),
        InputOutputTextPair(
            input_text="""Is there any maintenance scheduled on track 7 today?""",
            output_text="""Yes, there's a maintenance slot scheduled for track 7 from 2:00 PM to 4:00 PM today. Ensure you have all the necessary tools before heading there."""
        ),
        InputOutputTextPair(
            input_text="""Has the freight train from Bern arrived?""",
            output_text="""The freight train from Bern is scheduled to arrive in 15 minutes. Please ensure the designated track is clear and safe for its arrival."""
        ),
        InputOutputTextPair(
            input_text="""What's the weather forecast for today?""",
            output_text="""Today's forecast indicates light rain in the afternoon. Ensure you have appropriate gear and be cautious on slippery tracks."""
        ),
        InputOutputTextPair(
            input_text="""Are there any reported issues or obstructions today?""",
            output_text="""Currently, there's a reported obstruction on track 9. Maintenance is underway. Avoid the area or use alternative routes highlighted in red on your AR glasses."""
        ),
        InputOutputTextPair(
            input_text="""Is there any maintenance scheduled on track 5 today?""",
            output_text="""Yes, track 5 has a routine inspection scheduled from 1:00 PM to 2:30 PM. Please ensure it remains clear during that time."""
        ),
        InputOutputTextPair(
            input_text="""I've noticed a malfunctioning signal at the western end. Who should I report this to?""",
            output_text="""Thank you for reporting. I've logged the malfunctioning signal at the western end. A technician has been notified and will address it shortly."""
        ),
        InputOutputTextPair(
            input_text="""What's the status of the rail replacement on track 8?""",
            output_text="""The rail replacement on track 8 is currently 60% complete. It's expected to be finished by tomorrow evening."""
        ),
        InputOutputTextPair(
            input_text="""Are there any tools or equipment I need to bring for the overhead line check?""",
            output_text="""For the overhead line check, please ensure you have an insulation rod, voltage tester, and safety harness. All tools can be collected from the central tool station."""
        ),
        InputOutputTextPair(
            input_text="""I've completed the maintenance on the southern switches. How do I log this?""",
            output_text="""Thank you for the update. To log your maintenance work on the southern switches, please go to the 'Completed Tasks' section on your maintenance tablet and enter the details."""
        ),
        InputOutputTextPair(
            input_text="""When was the last inspection done on the water tower?""",
            output_text="""The last inspection of the water tower was conducted on June 15th, 2023. The next scheduled inspection is on December 10th, 2023."""
        ),
        InputOutputTextPair(
            input_text="""We need to replace some worn-out rails. How do I request new rails?""",
            output_text="""To request new rails, please fill out the 'Materials Request' form on your maintenance tablet. Specify the length and type of rails required, and the supply team will process your request."""
        ),
        InputOutputTextPair(
            input_text="""There's a hydraulic leak on crane C4. What should I do?""",
            output_text="""Safety first! Please isolate and shut down crane C4 immediately. I've alerted the hydraulic team, and they will be dispatched to fix the issue."""
        ),
        InputOutputTextPair(
            input_text="""How frequently do we check the brake systems of the shunting locomotives?""",
            output_text="""The brake systems of shunting locomotives are checked every two weeks. The next scheduled check is in 10 days."""
        ),
        InputOutputTextPair(
            input_text="""Do we have spare signal bulbs in stock?""",
            output_text="""Yes, we currently have 45 spare signal bulbs in stock. You can collect them from the main storage area."""
        )
    ]
)
response = chat.send_message("""There's a hydraulic problem on crane C4. What should I do?""", **parameters)
print(f"Response from Model: {response.text}")
response = chat.send_message("""I've noticed a malfunctioning signal at the east side. Who should I report this to?""", **parameters)
print(f"Response from Model: {response.text}")
